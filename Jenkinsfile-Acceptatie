pipeline {
    agent any
    tools {nodejs "node-6.11"}
	parameters {
        string(name: 'PORT', defaultValue: '2222')
    }
    stages{
        stage('Initializing stage') {
            steps {
                checkout scm
            }
        }
		stage('Unit tests') {
            steps {
                sh 'npm install'
                sh 'npm run unit-test'
            }
        }
        stage('Build image') {
            steps {
                script {
                    app = docker.build("hansschollaardt/node-todo")
                }
            }
        }

        stage('Deploy for integration test') {
           steps {
               script { 
					sh "echo Running instance on port: ${params.PORT}"
                    sh "docker run --rm -p ${params.PORT}:${params.PORT} -e PORT=${params.PORT} -d --name=test-acceptatie hansschollaardt/node-todo"
               }
            }
        }
        stage('Integration test image') {
            steps {
                sh 'npm run selenium-test'	
				sh 'docker stop test-acceptatie || true'
            }
        }
        stage('Push image') {
            steps {
                /* finally, if all went well: publish image */
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                       app.push("acc-${env.BUILD_NUMBER}")
                       app.push("acc-latest")
                    }
                }
            }  
        }
        stage('Deploy Acceptatie') {
            steps {
                sh 'echo "Now we can deploy our image"' 
                // continue even if container was not running (yet)
                sh 'docker stop docker-todo-acceptatie || true' 
                script {
					docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
						app.run('--rm -p 8001:9090 -d --name="docker-todo-acceptatie"');
					}
				}
            }
        }
    }
}
